{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","src","concat","alt","CardList","robots","map","user","i","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","margin","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","searchfield","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toString","toLowerCase","includes","length","components_SearchBox","components_Scroll","ErrorBoundary","components_CardList","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.1e7d9d2e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n  return (\n    <div className='tc bg-lightest-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\" />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card'\nconst CardList = ({ robots }) => {\n  return (\n   <div>\n    {\n      robots.map((user, i) => {\n        return ( \n          <Card\n            key={i}\n            id={user.id}\n            name={user.name}\n            email={user.email}\n          />\n        );\n      })\n    }\n   </div>\n  )\n}\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n  return (\n    <div className='pa2'>\n      <input\n        type='search'\n        placeholder='search robots'\n        className='pa3 ba'\n        onChange={searchChange}\n      />\n    </div>\n  )\n}\nexport default SearchBox","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div className='' style={{overflowY: 'scroll', border: '5px solid black', height: '500px', margin:'1rem'}}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Scroll;","import React, {Component} from 'react';\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render() {\n    if(this.state.hasError) {\n      return <h1>Ooooops. That is not good</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundary';\nimport './App.css'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  // Runs as soon as the pages loads, and the App component mounts to the CSS\n  componentDidMount() {\n    fetch ('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      // Takes the response (users) and assigns it to my state\n      .then(users => this.setState({robots: users}));\n  }\n  // Changes the 'seachfield' state when ran (gets passed into the SearchBox component)\n  onSearchChange= (event) => {\n    this.setState({ searchfield: event.target.value})\n  }\n\n  // Runs immediately after the constructor \n  render() {\n    const {robots, searchfield} = this.state;\n    // Gathers an array of all the robots whose names include the current value of the 'searchfield' state\n    const filteredRobots = robots.filter(robot => {\n      // Returns the robot objects that meet the criteria described below\n      return robot.name.toString().toLowerCase().includes(searchfield.toString().toLowerCase())\n    })\n    // While the current array of robots is empty, proceed to show 'Loading'...\n    return !robots.length ?\n      <h1 className='tc'>Loading...</h1>:\n      // Otherwise, render the JSX below\n      (\n        <div className='tc'>\n          <h1 className='f1'>RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchChange}/>\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      )\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App'\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <div>\n      <App />\n    </div>\n    \n  </React.StrictMode>\n);\n"],"sourceRoot":""}